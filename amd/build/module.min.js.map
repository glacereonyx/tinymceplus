{"version":3,"file":"module.min.js","sources":["../src/module.js"],"sourcesContent":["/* eslint no-unused-vars: 0\n          no-console: 0 */\n\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Functions used to initialize the TinyMCE Plus editor\n *\n * @copyright 2022 Ben Mitchell\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst tinymce = window.tinymce;\nconst YUI = window.YUI;\n\n/** A list of ExecCommands that should be ignored when triggering the input event on the original textarea */\nconst inputUpdateBlacklist = [\n  'mceFocus', 'mceWordCount', 'mceMedia', 'mceLink', 'mceCodeEditor', 'SelectAll'\n];\n\n/**\n * Initializes a TinyMCE editor instance.\n * @param {Array} options\n * @param {Array} foptions\n */\nexport const init_editor = (options, foptions) => {\n\n  // Set the min height to be the height of the texeditor.\n  const initheight = document.querySelector(options.selector)?.offsetHeight;\n  options.min_height = initheight || 200;\n  options.min_height += 25;\n\n  // Initialize the editor at the minheight.\n  options.height = options.min_height;\n\n  if (options.enable_filemanagement == true) {\n    if (foptions !== null) {\n      // TODO: Implement the image upload handler.\n      // options.images_upload_handler = image_upload_handler;\n\n      options.file_picker_callback = file_picker_callback;\n      options.file_picker_types = 'image'; // TODO: add media and file\n    } else {\n      console.warn('enable_filemanagement is true, however no \"fileoptions\" have been provided to the texteditor.');\n    }\n  }\n\n  // Run extra setup on the editor instance\n  options.setup = (editor) => {\n    editor.fileOptions = foptions;\n\n    editor.on('input', function (e) {\n      sync_textarea(editor);\n    });\n    editor.on('ExecCommand', function (e) {\n      if (inputUpdateBlacklist.indexOf(e.command) != -1) { // Return early if this is a blacklisted command.\n        return;\n      }\n      console.log(`The ${e.command} command was fired.`);\n      sync_textarea(editor);\n    });\n    editor.on('SetContent', function(e) {\n      const target = editor.getElement();\n      if (target.textContent != editor.getContent()){\n        sync_textarea(editor);\n      }\n    });\n  };\n  options.hidden_input = false;\n\n  tinymce.init(options);\n\n};\n\n/**\n * Syncs the attatched textarea with the content of TinyMCE. Also sends an input event from the textarea.\n * @param {object} editor A reference to the editor object.\n */\nfunction sync_textarea(editor) {\n  if (!editor) {\n    return;\n  }\n const target = editor.getElement();\n target.textContent = editor.getContent();\n target.dispatchEvent(new Event('input', {bubbles:true}));\n}\n\n/**\n * Uses Moodle's AJAX plugin to upload images using a web service.\n * @param {string} blobInfo\n * @param {number} progress\n * @returns {Promise}\n */\nconst image_upload_handler = (blobInfo, progress) => new Promise((resolve, reject) => {\n  // TODO: Write an implementation to work around Moodle's filepicker.js popup.\n});\n\n/**\n * Integrates the Moodle's repository/filepicker.js with TinyMCE\n * @param {requestCallback} callback\n * @param {string} value\n * @param {object} meta\n */\nconst file_picker_callback = (callback, value, meta) => {\n  const fileOptions = tinymce.activeEditor.fileOptions;\n\n  YUI().use('core_filepicker', function (Y) { // Using repository/filepicker.js\n\n    let options = null;\n\n    if (meta.filetype == 'image') {\n      options = fileOptions.image;\n    } else if (meta.filetype == 'file') {\n      options = fileOptions.file;\n    } else if (meta.filetype == 'media') {\n      options = fileOptions.media;\n    }\n\n    options.formcallback = (fileInfo) => {\n      console.log(fileInfo);\n      callback(fileInfo.url);\n    };\n\n    // TODO: See if we need this.\n    // options.editor_target = win.document.getElementById(target_id);\n\n    M.core_filepicker.show(Y, options);\n\n  });\n};"],"names":["tinymce","window","YUI","inputUpdateBlacklist","sync_textarea","editor","target","getElement","textContent","getContent","dispatchEvent","Event","bubbles","options","foptions","initheight","document","querySelector","selector","_document$querySelect","offsetHeight","min_height","height","enable_filemanagement","file_picker_callback","file_picker_types","console","warn","setup","fileOptions","on","e","indexOf","command","log","hidden_input","init","callback","value","meta","activeEditor","use","Y","filetype","image","file","media","formcallback","fileInfo","url","M","core_filepicker","show"],"mappings":";;;;;;;IAyBMA,QAAUC,OAAOD,QACjBE,IAAMD,OAAOC,IAGbC,qBAAuB,CAC3B,WAAY,eAAgB,WAAY,UAAW,gBAAiB,sBA6D7DC,cAAcC,WAChBA,YAGAC,OAASD,OAAOE,aACtBD,OAAOE,YAAcH,OAAOI,aAC5BH,OAAOI,cAAc,IAAIC,MAAM,QAAS,CAACC,SAAQ,2BA3DvB,SAACC,QAASC,oCAG7BC,yCAAaC,SAASC,cAAcJ,QAAQK,kDAA/BC,sBAA0CC,aAC7DP,QAAQQ,WAAaN,YAAc,IACnCF,QAAQQ,YAAc,GAGtBR,QAAQS,OAAST,QAAQQ,WAEY,GAAjCR,QAAQU,wBACO,OAAbT,UAIFD,QAAQW,qBAAuBA,qBAC/BX,QAAQY,kBAAoB,SAE5BC,QAAQC,KAAK,kGAKjBd,QAAQe,MAAQ,SAACvB,QACfA,OAAOwB,YAAcf,SAErBT,OAAOyB,GAAG,SAAS,SAAUC,GAC3B3B,cAAcC,WAEhBA,OAAOyB,GAAG,eAAe,SAAUC,IACe,GAA5C5B,qBAAqB6B,QAAQD,EAAEE,WAGnCP,QAAQQ,kBAAWH,EAAEE,gCACrB7B,cAAcC,YAEhBA,OAAOyB,GAAG,cAAc,SAASC,GAChB1B,OAAOE,aACXC,aAAeH,OAAOI,cAC/BL,cAAcC,YAIpBQ,QAAQsB,cAAe,EAEvBnC,QAAQoC,KAAKvB,cAiCTW,qBAAuB,SAACa,SAAUC,MAAOC,UACvCV,YAAc7B,QAAQwC,aAAaX,YAEzC3B,MAAMuC,IAAI,mBAAmB,SAAUC,OAEjC7B,QAAU,KAEO,SAAjB0B,KAAKI,SACP9B,QAAUgB,YAAYe,MACI,QAAjBL,KAAKI,SACd9B,QAAUgB,YAAYgB,KACI,SAAjBN,KAAKI,WACd9B,QAAUgB,YAAYiB,OAGxBjC,QAAQkC,aAAe,SAACC,UACtBtB,QAAQQ,IAAIc,UACZX,SAASW,SAASC,MAMpBC,EAAEC,gBAAgBC,KAAKV,EAAG7B"}